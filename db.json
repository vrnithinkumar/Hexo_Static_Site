{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/img/Notifiaction.png","path":"img/Notifiaction.png","modified":0,"renderable":0},{"_id":"source/img/avatar.jpg","path":"img/avatar.jpg","modified":0,"renderable":0},{"_id":"source/img/icon_wechat.png","path":"img/icon_wechat.png","modified":0,"renderable":0},{"_id":"source/img/tag-bg.jpg","path":"img/tag-bg.jpg","modified":0,"renderable":0},{"_id":"source/img/404-bg.jpg","path":"img/404-bg.jpg","modified":0,"renderable":0},{"_id":"source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":0},{"_id":"source/img/home-bg-o.jpg","path":"img/home-bg-o.jpg","modified":0,"renderable":0},{"_id":"themes/huxblog/source/css/hux-blog.min.css","path":"css/hux-blog.min.css","modified":0,"renderable":1},{"_id":"themes/huxblog/source/css/hux-blog.css","path":"css/hux-blog.css","modified":0,"renderable":1},{"_id":"themes/huxblog/source/css/syntax.styl","path":"css/syntax.styl","modified":0,"renderable":1},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.eot","path":"fonts/glyphicons-halflings-regular.eot","modified":0,"renderable":1},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.ttf","path":"fonts/glyphicons-halflings-regular.ttf","modified":0,"renderable":1},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.woff","path":"fonts/glyphicons-halflings-regular.woff","modified":0,"renderable":1},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.woff2","path":"fonts/glyphicons-halflings-regular.woff2","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/hux-blog.js","path":"js/hux-blog.js","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/hux-blog.min.js","path":"js/hux-blog.min.js","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/jquery.tagcloud.js","path":"js/jquery.tagcloud.js","modified":0,"renderable":1},{"_id":"source/img/home-bg.jpg","path":"img/home-bg.jpg","modified":0,"renderable":0},{"_id":"themes/huxblog/source/js/jquery.nav.js","path":"js/jquery.nav.js","modified":0,"renderable":1},{"_id":"themes/huxblog/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":0,"renderable":1},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.svg","path":"fonts/glyphicons-halflings-regular.svg","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/bootstrap.js","path":"js/bootstrap.js","modified":0,"renderable":1},{"_id":"source/img/contact-bg.jpg","path":"img/contact-bg.jpg","modified":0,"renderable":0},{"_id":"themes/huxblog/source/css/bootstrap.css","path":"css/bootstrap.css","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"source/img/about-bg.jpg","path":"img/about-bg.jpg","modified":0,"renderable":0},{"_id":"themes/huxblog/source/js/jquery.js","path":"js/jquery.js","modified":0,"renderable":1}],"Cache":[{"_id":"themes/huxblog/README.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1465195256831},{"_id":"source/404.md","hash":"bc7c13312667f3626b578ae9f25047797fa34d73","modified":1470071140833},{"_id":"themes/huxblog/layout/archive.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1465195256885},{"_id":"source/_posts/AssemblerAndLinker.md","hash":"a2d3172aed228464b7e0ee12ad3c91286731d59d","modified":1470071420573},{"_id":"source/_posts/Script.md","hash":"db5bb9f6df3836efb95b028105cb2fc113eb30f7","modified":1470071420573},{"_id":"source/_posts/hello-2015.markdown","hash":"84713ead20d6537cf83e08db693143bfd0b2a8dd","modified":1470071140833},{"_id":"source/img/Notifiaction.png","hash":"6cab6eeb36046e0989707825ce7070b63b9c335d","modified":1465201885036},{"_id":"themes/huxblog/LICENSE","hash":"2b209f06bebeb2a8c2b7e187e436f3e1e1fbc8a7","modified":1470071140965},{"_id":"source/img/avatar.jpg","hash":"49cfa597392c4a116584c07690efbbc06354acc7","modified":1465195256810},{"_id":"source/img/icon_wechat.png","hash":"7fdb00c9017236e05c1b3e6da38a2cc382fd69fa","modified":1465195256822},{"_id":"source/about/index.md","hash":"f5554ef6553873fa073ae8fdad622b48e824b2b7","modified":1470071140877},{"_id":"source/tags/index.md","hash":"0bc541f4c6a0f21bec67b6717ee86226f0eddf39","modified":1470071140965},{"_id":"themes/huxblog/languages_to_be_added/default.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1470071140965},{"_id":"themes/huxblog/languages_to_be_added/de.yml","hash":"424a9c1e6ab69334d7873f6574da02ca960aa572","modified":1470071140965},{"_id":"themes/huxblog/languages_to_be_added/en.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1470071140965},{"_id":"themes/huxblog/languages_to_be_added/es.yml","hash":"cb4eeca0ed3768a77e0cd216300f2b2549628b1b","modified":1470071140965},{"_id":"themes/huxblog/languages_to_be_added/no.yml","hash":"8ca475a3b4f8efe6603030f0013aae39668230e1","modified":1470071140965},{"_id":"themes/huxblog/languages_to_be_added/ru.yml","hash":"42df7afeb7a35dc46d272b7f4fb880a9d9ebcaa5","modified":1470071140965},{"_id":"themes/huxblog/languages_to_be_added/zh-TW.yml","hash":"9acac6cc4f8002c3fa53ff69fb8cf66c915bd016","modified":1470071140969},{"_id":"themes/huxblog/languages_to_be_added/pl.yml","hash":"de7eb5850ae65ba7638e907c805fea90617a988c","modified":1470071140965},{"_id":"themes/huxblog/languages_to_be_added/zh-CN.yml","hash":"7bfcb0b8e97d7e5edcfca8ab26d55d9da2573c1c","modified":1470071140965},{"_id":"themes/huxblog/layout/layout.ejs","hash":"03e278a3b8bc4503183276b6130ac04a8d5b9865","modified":1470071140969},{"_id":"themes/huxblog/layout/404.ejs","hash":"a4d73541a53e56b7dd46249c6d27cb59f4d97422","modified":1470071140969},{"_id":"themes/huxblog/layout/about.ejs","hash":"7f56c71383ef6c156b56d79b3984e07cc466606a","modified":1470071140969},{"_id":"themes/huxblog/layout/index.ejs","hash":"e25cbd9e381fa473198b8edfbd735048926d3812","modified":1470071140969},{"_id":"themes/huxblog/layout/tags.ejs","hash":"a51bf2828af20939d702de1fdae067439a1153c0","modified":1470071140969},{"_id":"source/img/tag-bg.jpg","hash":"8844274a812ae19e8f2a3b7e4e465342e63eb852","modified":1465195256825},{"_id":"source/_posts/Script/Notifiaction.png","hash":"6cab6eeb36046e0989707825ce7070b63b9c335d","modified":1465201885036},{"_id":"themes/huxblog/layout/page.ejs","hash":"bcda374e6d03f5fbb453349eb8f3af014528297d","modified":1470071140969},{"_id":"source/_posts/js-version/keep-calm-and-learn-javascript.png","hash":"49ea101b92ce5e136a19e6b11162f8f4126fe01f","modified":1465195256791},{"_id":"source/_posts/js-version/post-bg-js-version.jpg","hash":"1598a1180c491f36b9036415b622bd9e5ad5d3bc","modified":1465195256796},{"_id":"source/img/404-bg.jpg","hash":"68f7d525269a94287e0ad18713ae232fb59dcf71","modified":1465195256804},{"_id":"source/img/favicon.ico","hash":"d6b21336a582b21f7db76514a80d2b6d857a23e1","modified":1465215677907},{"_id":"source/img/home-bg-o.jpg","hash":"990f6f9dd0ecb5348bfcc47305553d58c0d8f326","modified":1465195256819},{"_id":"themes/huxblog/layout/keynote.ejs","hash":"16a4164c3d291131fb66078e8df93b31fe050040","modified":1470071140969},{"_id":"themes/huxblog/layout/post.ejs","hash":"fcde4c712aff62c61627231006a4b5b721c616e9","modified":1470071140969},{"_id":"themes/huxblog/layout/_partial/pagination.ejs","hash":"557d6bb069a1d48af49ae912994653f44b32a570","modified":1470071140969},{"_id":"themes/huxblog/layout/_partial/head.ejs","hash":"1affb397a5f08d4ab629c5431cce4df0c5480409","modified":1470071140969},{"_id":"themes/huxblog/layout/_partial/nav.ejs","hash":"4c905166c960852e9b9a3c9d5c680091e37b481f","modified":1470071140969},{"_id":"themes/huxblog/source/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1465195256954},{"_id":"themes/huxblog/source/css/hux-blog.css","hash":"c1b0a32ad8075ac09d99fb4d64a9fbc84163abf8","modified":1470071140973},{"_id":"themes/huxblog/source/css/syntax.styl","hash":"f3f9ff0d1ebc4f7fa18d7e367b2ba2f0899adbd4","modified":1470071140977},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1465195256963},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1465195256972},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1465195256975},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1465195256977},{"_id":"themes/huxblog/layout/_partial/footer.ejs","hash":"4b859c2171054ecba1d70f0eabe09661a9f4f9eb","modified":1470071140969},{"_id":"themes/huxblog/source/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1470071140981},{"_id":"themes/huxblog/source/js/hux-blog.min.js","hash":"1563e7f70550ac6b30803d6f449719b853200e35","modified":1470071140985},{"_id":"themes/huxblog/source/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1470071140981},{"_id":"themes/huxblog/source/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1464543074041},{"_id":"source/_posts/js-module-loader/post-bg-js-module.jpg","hash":"4a43bfa6b69c79a6ef90bd852fe5756d241733cd","modified":1465195256786},{"_id":"source/_posts/js-version/javascript-java.jpg","hash":"881e35e241a8be40f3c4e3a6f57d5402247c1eb3","modified":1465195256790},{"_id":"source/img/home-bg.jpg","hash":"a191201c3a98728e6ea66d6827df827ecfcc9d33","modified":1465195256822},{"_id":"themes/huxblog/source/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1470071140989},{"_id":"themes/huxblog/source/css/bootstrap.min.css","hash":"973e37a8502921d56bc02bb55321f45b072b6f71","modified":1470071140973},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1470071140977},{"_id":"themes/huxblog/source/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1470071140981},{"_id":"source/_posts/unix-linux-note/post-bg-unix-linux.jpg","hash":"e8f3739cb78ea6d1645665d07ebdb79881774fb6","modified":1465195256799},{"_id":"source/_posts/Script/StandUp_760_348.png","hash":"58119bb3cdf59ea661d5664e7c8c209e1a54a798","modified":1465207032878},{"_id":"source/img/contact-bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1465195256813},{"_id":"themes/huxblog/source/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1470071140973},{"_id":"source/_posts/hello-2015/post-bg-2015.jpg","hash":"7118d1af8ac638dc55ee63d0b17e704811c6a37a","modified":1465195256783},{"_id":"themes/huxblog/source/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1470071140989},{"_id":"source/img/about-bg.jpg","hash":"b5814b2d10eb38dfda0072365567f3823bc34aba","modified":1465195256807},{"_id":"themes/huxblog/source/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1470071140989},{"_id":"source/_posts/Revert-A-Commit.md","hash":"16df828ae22d5474210cc4476182cb3495a12b93","modified":1470076008743},{"_id":"source/_posts/Revert-A-Commit/post-bg-2015.jpg","hash":"7118d1af8ac638dc55ee63d0b17e704811c6a37a","modified":1470074375223},{"_id":"source/_posts/Revert-A-Commit/Git_Posts.jpg","hash":"e45bb6e8a1e6b1127d3336b980e6b5be26b319c9","modified":1470074716846},{"_id":"source/_posts/Revert-A-Commit/Git-Logo.jpg","hash":"ca19baefbb3f95ebd50650dfab16af76b011feef","modified":1470075764683},{"_id":"source/_posts/Revert-A-Commit/git.png","hash":"217e632276382918be9c80dca75e3e5f1e66aeac","modified":1470075977915}],"Category":[],"Data":[],"Page":[{"layout":"404","description":"Error 404: Resource not found. :(","header-img":"img/404-bg.jpg","_content":"","source":"404.md","raw":"---\nlayout: 404\ndescription: \"Error 404: Resource not found. :(\"\nheader-img: \"img/404-bg.jpg\"\n---\n","date":"2016-08-01T17:48:34.200Z","updated":"2016-08-01T17:05:40.833Z","path":"404.html","_id":"cirbuc7bj00004os3oll2ilka","title":"","comments":1,"content":"","excerpt":"","more":""},{"layout":"tags","title":"Tags","description":"Hey, this is Tags.","header-img":"img/tag-bg.jpg","_content":"","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: \"Tags\"\ndescription: \"Hey, this is Tags.\"\nheader-img: \"img/tag-bg.jpg\"\n---\n","date":"2016-08-01T17:48:34.200Z","updated":"2016-08-01T17:05:40.965Z","path":"tags/index.html","_id":"cirbuc7c200024os38py8i2se","comments":1,"content":"","excerpt":"","more":""},{"layout":"about","title":"About","date":"2016-04-20T23:18:33.000Z","description":"Hey, Nithin.","header-img":"img/about-bg.jpg","_content":"\nNothing much.\nAm still finding me.\n","source":"about/index.md","raw":"---\nlayout: \"about\"\ntitle: \"About\"\ndate: 2016-04-21 04:48:33\ndescription: \"Hey, Nithin.\"\nheader-img: \"img/about-bg.jpg\"\n---\n\nNothing much.\nAm still finding me.\n","updated":"2016-08-01T17:05:40.877Z","path":"about/index.html","_id":"cirbuc7c500044os3a0j2taea","comments":1,"content":"<p>Nothing much.<br>Am still finding me.</p>\n","excerpt":"","more":"<p>Nothing much.<br>Am still finding me.</p>\n"}],"Post":[{"title":"Assembler And Linker","date":"2016-08-01T09:35:32.000Z","subtitle":" \" An simple effort to understand Assembler and Linker \"","author":"Nithin VR","header-img":"StandUp_760_348.png","catalog":true,"_content":" \n## Introduction\n\nBetween compiling and executing a High-Level programming language, Many intermediate steps like Lexical Analysing, Syntax Analysing, Semantic Analysing, Pre Optimizing, Assembly Code generation, Post Optimizing,  Assembling,  Linking and Loading are happening. In this post we are mainly covering \n\n  - Assembler\n  - Linker\n  - Loader\n  - Disassembler\n\n### Assembler\n\nAssembler will create  object code from the assembly code. After Assembly Code generation and Post Optimizing, the generated assembly code is translated to Object code. Assembly Language aka **asm** is low-level programming language which is specific for CPU architecture. Its actually human readable representation of machine code.\n\nFor example:\nAssembly Code for moving value 55 hex into register BL\n\n    MOV BL, 055H\n\nCorresponding Machine Code\n\n    10111000\nAn assembler will generate object code by translating combinations of mnemonics and syntax for operations and addressing modes into their numerical equivalents. Each object code file combined to create the executable file.\n\n**In short, assembler will** \n\n - Translate assembly instructions, macros, and  pseudo-instructions\ninto binary machine instructions\n - Convert decimal numbers, etc. specified by\nprogrammer into binary.\n\n**Types of Assemblers**\n\n - One pass assembler\n\n - Two pass assembler\n\n### Linker\n### Assembler\n### Loader\n### Disassembler\n\n### Todos\n\n - Write Tests\n - Rethink Github Save\n - Add Code Comments\n - Add Night Mode\n","source":"_posts/AssemblerAndLinker.md","raw":"---\ntitle: Assembler And Linker\ndate: 2016-08-01 15:05:32\nsubtitle: \" \\\" An simple effort to understand Assembler and Linker \\\"\"\nauthor: \"Nithin VR\"\nheader-img: \"StandUp_760_348.png\"\ncatalog: true\ntags: \n    -ASM\n    -Assembler\n    -Linker    \n    -Loader\n---\n \n## Introduction\n\nBetween compiling and executing a High-Level programming language, Many intermediate steps like Lexical Analysing, Syntax Analysing, Semantic Analysing, Pre Optimizing, Assembly Code generation, Post Optimizing,  Assembling,  Linking and Loading are happening. In this post we are mainly covering \n\n  - Assembler\n  - Linker\n  - Loader\n  - Disassembler\n\n### Assembler\n\nAssembler will create  object code from the assembly code. After Assembly Code generation and Post Optimizing, the generated assembly code is translated to Object code. Assembly Language aka **asm** is low-level programming language which is specific for CPU architecture. Its actually human readable representation of machine code.\n\nFor example:\nAssembly Code for moving value 55 hex into register BL\n\n    MOV BL, 055H\n\nCorresponding Machine Code\n\n    10111000\nAn assembler will generate object code by translating combinations of mnemonics and syntax for operations and addressing modes into their numerical equivalents. Each object code file combined to create the executable file.\n\n**In short, assembler will** \n\n - Translate assembly instructions, macros, and  pseudo-instructions\ninto binary machine instructions\n - Convert decimal numbers, etc. specified by\nprogrammer into binary.\n\n**Types of Assemblers**\n\n - One pass assembler\n\n - Two pass assembler\n\n### Linker\n### Assembler\n### Loader\n### Disassembler\n\n### Todos\n\n - Write Tests\n - Rethink Github Save\n - Add Code Comments\n - Add Night Mode\n","slug":"AssemblerAndLinker","published":1,"updated":"2016-08-01T17:10:20.573Z","_id":"cirbuc7by00014os32bgd4qgj","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h2><p>Between compiling and executing a High-Level programming language, Many intermediate steps like Lexical Analysing, Syntax Analysing, Semantic Analysing, Pre Optimizing, Assembly Code generation, Post Optimizing,  Assembling,  Linking and Loading are happening. In this post we are mainly covering </p>\n<ul>\n<li>Assembler</li>\n<li>Linker</li>\n<li>Loader</li>\n<li>Disassembler</li>\n</ul>\n<h3 id=\"Assembler\"><a href=\"#Assembler\" class=\"headerlink\" title=\"Assembler\"></a>Assembler</h3><p>Assembler will create  object code from the assembly code. After Assembly Code generation and Post Optimizing, the generated assembly code is translated to Object code. Assembly Language aka <strong>asm</strong> is low-level programming language which is specific for CPU architecture. Its actually human readable representation of machine code.</p>\n<p>For example:<br>Assembly Code for moving value 55 hex into register BL</p>\n<pre><code>MOV BL, 055H\n</code></pre><p>Corresponding Machine Code</p>\n<pre><code>10111000\n</code></pre><p>An assembler will generate object code by translating combinations of mnemonics and syntax for operations and addressing modes into their numerical equivalents. Each object code file combined to create the executable file.</p>\n<p><strong>In short, assembler will</strong> </p>\n<ul>\n<li>Translate assembly instructions, macros, and  pseudo-instructions<br>into binary machine instructions</li>\n<li>Convert decimal numbers, etc. specified by<br>programmer into binary.</li>\n</ul>\n<p><strong>Types of Assemblers</strong></p>\n<ul>\n<li><p>One pass assembler</p>\n</li>\n<li><p>Two pass assembler</p>\n</li>\n</ul>\n<h3 id=\"Linker\"><a href=\"#Linker\" class=\"headerlink\" title=\"Linker\"></a>Linker</h3><h3 id=\"Assembler-1\"><a href=\"#Assembler-1\" class=\"headerlink\" title=\"Assembler\"></a>Assembler</h3><h3 id=\"Loader\"><a href=\"#Loader\" class=\"headerlink\" title=\"Loader\"></a>Loader</h3><h3 id=\"Disassembler\"><a href=\"#Disassembler\" class=\"headerlink\" title=\"Disassembler\"></a>Disassembler</h3><h3 id=\"Todos\"><a href=\"#Todos\" class=\"headerlink\" title=\"Todos\"></a>Todos</h3><ul>\n<li>Write Tests</li>\n<li>Rethink Github Save</li>\n<li>Add Code Comments</li>\n<li>Add Night Mode</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h2><p>Between compiling and executing a High-Level programming language, Many intermediate steps like Lexical Analysing, Syntax Analysing, Semantic Analysing, Pre Optimizing, Assembly Code generation, Post Optimizing,  Assembling,  Linking and Loading are happening. In this post we are mainly covering </p>\n<ul>\n<li>Assembler</li>\n<li>Linker</li>\n<li>Loader</li>\n<li>Disassembler</li>\n</ul>\n<h3 id=\"Assembler\"><a href=\"#Assembler\" class=\"headerlink\" title=\"Assembler\"></a>Assembler</h3><p>Assembler will create  object code from the assembly code. After Assembly Code generation and Post Optimizing, the generated assembly code is translated to Object code. Assembly Language aka <strong>asm</strong> is low-level programming language which is specific for CPU architecture. Its actually human readable representation of machine code.</p>\n<p>For example:<br>Assembly Code for moving value 55 hex into register BL</p>\n<pre><code>MOV BL, 055H\n</code></pre><p>Corresponding Machine Code</p>\n<pre><code>10111000\n</code></pre><p>An assembler will generate object code by translating combinations of mnemonics and syntax for operations and addressing modes into their numerical equivalents. Each object code file combined to create the executable file.</p>\n<p><strong>In short, assembler will</strong> </p>\n<ul>\n<li>Translate assembly instructions, macros, and  pseudo-instructions<br>into binary machine instructions</li>\n<li>Convert decimal numbers, etc. specified by<br>programmer into binary.</li>\n</ul>\n<p><strong>Types of Assemblers</strong></p>\n<ul>\n<li><p>One pass assembler</p>\n</li>\n<li><p>Two pass assembler</p>\n</li>\n</ul>\n<h3 id=\"Linker\"><a href=\"#Linker\" class=\"headerlink\" title=\"Linker\"></a>Linker</h3><h3 id=\"Assembler-1\"><a href=\"#Assembler-1\" class=\"headerlink\" title=\"Assembler\"></a>Assembler</h3><h3 id=\"Loader\"><a href=\"#Loader\" class=\"headerlink\" title=\"Loader\"></a>Loader</h3><h3 id=\"Disassembler\"><a href=\"#Disassembler\" class=\"headerlink\" title=\"Disassembler\"></a>Disassembler</h3><h3 id=\"Todos\"><a href=\"#Todos\" class=\"headerlink\" title=\"Todos\"></a>Todos</h3><ul>\n<li>Write Tests</li>\n<li>Rethink Github Save</li>\n<li>Add Code Comments</li>\n<li>Add Night Mode</li>\n</ul>\n"},{"layout":"post","title":"Stand Up Script","subtitle":" \"Powershell script to remind you stand up and take break while you work continuously \"","date":"2016-06-06T08:30:00.000Z","author":"Nithin VR","header-img":"StandUp_760_348.png","catalog":true,"_content":"\n# Stand Up Script\n\nPowershell script that will alert at each hour by Desktop notification as well as using beep sound. To avoid continues sitting and working this script will help to remind to stand up or relax each hour. It will lock the PC at each hour too :)\n\n### What does it do\n\n> - It will beep according to the time.\n> - Show Desktop notification with time and message.\n> -  Lock the the computer automatically after the notification.\n\n*Screen Shot of Notification:*\n![alt text](/img/Notifiaction.png \"\")\n\n### To Do\n\n> - Get time interval for notification from user as command line parameter.\n> - Change the busy waiting to sleep.\n> - Re-factor the code.\n\n### How to Run it\n\n>  - Download the script from [github](https://github.com/vrnithinkumar/powershell/blob/master/StandUpAlarm.ps1).\n>  -  Run `powershell StandUpAlaram.ps1`\n\nPlease feel free to send the feedback, bug, or any suggestions.\n","source":"_posts/Script.md","raw":"---\nlayout: post\ntitle: \"Stand Up Script\"\nsubtitle: \" \\\"Powershell script to remind you stand up and take break while you work continuously \\\"\"\ndate: 2016-06-06 14:00:00\nauthor: \"Nithin VR\"\nheader-img: \"StandUp_760_348.png\"\ncatalog: true\ntags:\n    - Powershell\n    - Scripting\n---\n\n# Stand Up Script\n\nPowershell script that will alert at each hour by Desktop notification as well as using beep sound. To avoid continues sitting and working this script will help to remind to stand up or relax each hour. It will lock the PC at each hour too :)\n\n### What does it do\n\n> - It will beep according to the time.\n> - Show Desktop notification with time and message.\n> -  Lock the the computer automatically after the notification.\n\n*Screen Shot of Notification:*\n![alt text](/img/Notifiaction.png \"\")\n\n### To Do\n\n> - Get time interval for notification from user as command line parameter.\n> - Change the busy waiting to sleep.\n> - Re-factor the code.\n\n### How to Run it\n\n>  - Download the script from [github](https://github.com/vrnithinkumar/powershell/blob/master/StandUpAlarm.ps1).\n>  -  Run `powershell StandUpAlaram.ps1`\n\nPlease feel free to send the feedback, bug, or any suggestions.\n","slug":"Script","published":1,"updated":"2016-08-01T17:10:20.573Z","_id":"cirbuc7c300034os3uvytmtgh","comments":1,"photos":[],"link":"","content":"<h1 id=\"Stand-Up-Script\"><a href=\"#Stand-Up-Script\" class=\"headerlink\" title=\"Stand Up Script\"></a>Stand Up Script</h1><p>Powershell script that will alert at each hour by Desktop notification as well as using beep sound. To avoid continues sitting and working this script will help to remind to stand up or relax each hour. It will lock the PC at each hour too :)</p>\n<h3 id=\"What-does-it-do\"><a href=\"#What-does-it-do\" class=\"headerlink\" title=\"What does it do\"></a>What does it do</h3><blockquote>\n<ul>\n<li>It will beep according to the time.</li>\n<li>Show Desktop notification with time and message.</li>\n<li>Lock the the computer automatically after the notification.</li>\n</ul>\n</blockquote>\n<p><em>Screen Shot of Notification:</em><br><img src=\"/img/Notifiaction.png\" alt=\"alt text\"></p>\n<h3 id=\"To-Do\"><a href=\"#To-Do\" class=\"headerlink\" title=\"To Do\"></a>To Do</h3><blockquote>\n<ul>\n<li>Get time interval for notification from user as command line parameter.</li>\n<li>Change the busy waiting to sleep.</li>\n<li>Re-factor the code.</li>\n</ul>\n</blockquote>\n<h3 id=\"How-to-Run-it\"><a href=\"#How-to-Run-it\" class=\"headerlink\" title=\"How to Run it\"></a>How to Run it</h3><blockquote>\n<ul>\n<li>Download the script from <a href=\"https://github.com/vrnithinkumar/powershell/blob/master/StandUpAlarm.ps1\" target=\"_blank\" rel=\"external\">github</a>.</li>\n<li>Run <code>powershell StandUpAlaram.ps1</code></li>\n</ul>\n</blockquote>\n<p>Please feel free to send the feedback, bug, or any suggestions.</p>\n","excerpt":"","more":"<h1 id=\"Stand-Up-Script\"><a href=\"#Stand-Up-Script\" class=\"headerlink\" title=\"Stand Up Script\"></a>Stand Up Script</h1><p>Powershell script that will alert at each hour by Desktop notification as well as using beep sound. To avoid continues sitting and working this script will help to remind to stand up or relax each hour. It will lock the PC at each hour too :)</p>\n<h3 id=\"What-does-it-do\"><a href=\"#What-does-it-do\" class=\"headerlink\" title=\"What does it do\"></a>What does it do</h3><blockquote>\n<ul>\n<li>It will beep according to the time.</li>\n<li>Show Desktop notification with time and message.</li>\n<li>Lock the the computer automatically after the notification.</li>\n</ul>\n</blockquote>\n<p><em>Screen Shot of Notification:</em><br><img src=\"/img/Notifiaction.png\" alt=\"alt text\"></p>\n<h3 id=\"To-Do\"><a href=\"#To-Do\" class=\"headerlink\" title=\"To Do\"></a>To Do</h3><blockquote>\n<ul>\n<li>Get time interval for notification from user as command line parameter.</li>\n<li>Change the busy waiting to sleep.</li>\n<li>Re-factor the code.</li>\n</ul>\n</blockquote>\n<h3 id=\"How-to-Run-it\"><a href=\"#How-to-Run-it\" class=\"headerlink\" title=\"How to Run it\"></a>How to Run it</h3><blockquote>\n<ul>\n<li>Download the script from <a href=\"https://github.com/vrnithinkumar/powershell/blob/master/StandUpAlarm.ps1\">github</a>.</li>\n<li>Run <code>powershell StandUpAlaram.ps1</code></li>\n</ul>\n</blockquote>\n<p>Please feel free to send the feedback, bug, or any suggestions.</p>\n"},{"layout":"post","title":"Welcome to My Blog","subtitle":" \"Hello World, Hello Blog\"","date":"2016-05-29T06:30:00.000Z","author":"Nithin VR","header-img":"post-bg-2015.jpg","_content":"\n> “Yeah It's on. ”\n\n\nHello World..\nWelcome to My Blog\n","source":"_posts/hello-2015.markdown","raw":"---\nlayout:     post\ntitle:      \"Welcome to My Blog\"\nsubtitle:   \" \\\"Hello World, Hello Blog\\\"\"\ndate:       2016-05-29 12:00:00\nauthor:     \"Nithin VR\"\nheader-img: \"post-bg-2015.jpg\"\ntags:\n    - random\n---\n\n> “Yeah It's on. ”\n\n\nHello World..\nWelcome to My Blog\n","slug":"hello-2015","published":1,"updated":"2016-08-01T17:05:40.833Z","_id":"cirbuc7c700054os3pjpd1ijz","comments":1,"photos":[],"link":"","content":"<blockquote>\n<p>“Yeah It’s on. ”</p>\n</blockquote>\n<p>Hello World..<br>Welcome to My Blog</p>\n","excerpt":"","more":"<blockquote>\n<p>“Yeah It’s on. ”</p>\n</blockquote>\n<p>Hello World..<br>Welcome to My Blog</p>\n"},{"layout":"post","title":"Revert a Commit Already Pushed to a Remote Repository","date":"2016-05-29T18:40:03.000Z","subtitle":"","author":"Nithin VR","header-img":"git.png","catalog":true,"_content":"You’ve just pushed your local branch to a remote branch, but then  realized that some errors happened.\n\nEg:\n* That there was  some unacceptable typo in commit message.\n* You just added a unwanted file like ~files or class file.\n\n\nDon't worry you can revert it to back to your previous safe commit by reverting your current commit.\n\n>$ git reset HEAD^ --hard\n>\n>$ git push origin master -f    \n\n\n**First step** reset the branch to the parent of the current commit.\n**Second step** force-push it to the remote.\n\n---\n[More Details: Revert a commit already pushed to a remote repository -Christoph Rüegg](http://christoph.ruegg.name/blog/git-howto-revert-a-commit-already-pushed-to-a-remote-reposit.html)\n","source":"_posts/Revert-A-Commit.md","raw":"---\nlayout:     post\ntitle: Revert a Commit Already Pushed to a Remote Repository\ndate: 2016-05-30 00:10:03\nsubtitle: \"\"\nauthor:     \"Nithin VR\"\nheader-img: \"git.png\"\ncatalog: true\ntags:\n\t- Git\n\t- Version Control\n---\nYou’ve just pushed your local branch to a remote branch, but then  realized that some errors happened.\n\nEg:\n* That there was  some unacceptable typo in commit message.\n* You just added a unwanted file like ~files or class file.\n\n\nDon't worry you can revert it to back to your previous safe commit by reverting your current commit.\n\n>$ git reset HEAD^ --hard\n>\n>$ git push origin master -f    \n\n\n**First step** reset the branch to the parent of the current commit.\n**Second step** force-push it to the remote.\n\n---\n[More Details: Revert a commit already pushed to a remote repository -Christoph Rüegg](http://christoph.ruegg.name/blog/git-howto-revert-a-commit-already-pushed-to-a-remote-reposit.html)\n","slug":"Revert-A-Commit","published":1,"updated":"2016-08-01T18:26:48.743Z","_id":"circaqzdv0000qksfxyej1q95","comments":1,"photos":[],"link":"","content":"<p>You’ve just pushed your local branch to a remote branch, but then  realized that some errors happened.</p>\n<p>Eg:</p>\n<ul>\n<li>That there was  some unacceptable typo in commit message.</li>\n<li>You just added a unwanted file like ~files or class file.</li>\n</ul>\n<p>Don’t worry you can revert it to back to your previous safe commit by reverting your current commit.</p>\n<blockquote>\n<p>$ git reset HEAD^ –hard</p>\n<p>$ git push origin master -f    </p>\n</blockquote>\n<p><strong>First step</strong> reset the branch to the parent of the current commit.<br><strong>Second step</strong> force-push it to the remote.</p>\n<hr>\n<p><a href=\"http://christoph.ruegg.name/blog/git-howto-revert-a-commit-already-pushed-to-a-remote-reposit.html\" target=\"_blank\" rel=\"external\">More Details: Revert a commit already pushed to a remote repository -Christoph Rüegg</a></p>\n","excerpt":"","more":"<p>You’ve just pushed your local branch to a remote branch, but then  realized that some errors happened.</p>\n<p>Eg:</p>\n<ul>\n<li>That there was  some unacceptable typo in commit message.</li>\n<li>You just added a unwanted file like ~files or class file.</li>\n</ul>\n<p>Don’t worry you can revert it to back to your previous safe commit by reverting your current commit.</p>\n<blockquote>\n<p>$ git reset HEAD^ –hard</p>\n<p>$ git push origin master -f    </p>\n</blockquote>\n<p><strong>First step</strong> reset the branch to the parent of the current commit.<br><strong>Second step</strong> force-push it to the remote.</p>\n<hr>\n<p><a href=\"http://christoph.ruegg.name/blog/git-howto-revert-a-commit-already-pushed-to-a-remote-reposit.html\">More Details: Revert a commit already pushed to a remote repository -Christoph Rüegg</a></p>\n"}],"PostAsset":[{"_id":"source/_posts/Script/StandUp_760_348.png","slug":"StandUp_760_348.png","post":"cirbuc7c300034os3uvytmtgh","modified":0,"renderable":0},{"_id":"source/_posts/hello-2015/post-bg-2015.jpg","slug":"post-bg-2015.jpg","post":"cirbuc7c700054os3pjpd1ijz","modified":0,"renderable":0},{"_id":"source/_posts/Script/Notifiaction.png","slug":"Notifiaction.png","post":"cirbuc7c300034os3uvytmtgh","modified":0,"renderable":0},{"_id":"source/_posts/Revert-A-Commit/Git-Logo.jpg","slug":"Git-Logo.jpg","post":"circaqzdv0000qksfxyej1q95","modified":0,"renderable":0},{"_id":"source/_posts/Revert-A-Commit/git.png","slug":"git.png","post":"circaqzdv0000qksfxyej1q95","modified":1,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"cirbuc7c300034os3uvytmtgh","tag_id":"cirbuc7c900064os3yqqx9rdp","_id":"cirbuc7ck00094os3atopf3ky"},{"post_id":"cirbuc7c300034os3uvytmtgh","tag_id":"cirbuc7cd00074os3ixpeved3","_id":"cirbuc7cm000a4os3713uboqy"},{"post_id":"cirbuc7c700054os3pjpd1ijz","tag_id":"cirbuc7ci00084os3ruahxxgt","_id":"cirbuc7cm000b4os3f5nzd3zf"},{"post_id":"cirbuc7by00014os32bgd4qgj","tag_id":"cirby19yq0000lgs3z5y51o3m","_id":"cirby19yu0001lgs3cgn6akhc"},{"post_id":"circaqzdv0000qksfxyej1q95","tag_id":"circaqzec0001qksfbomsq9v9","_id":"circaqzek0003qksfta2paw43"},{"post_id":"circaqzdv0000qksfxyej1q95","tag_id":"circaqzei0002qksfvw7y9bv6","_id":"circaqzel0004qksf8172dncx"}],"Tag":[{"name":"Powershell","_id":"cirbuc7c900064os3yqqx9rdp"},{"name":"Scripting","_id":"cirbuc7cd00074os3ixpeved3"},{"name":"random","_id":"cirbuc7ci00084os3ruahxxgt"},{"name":"-ASM -Assembler -Linker -Loader","_id":"cirby19yq0000lgs3z5y51o3m"},{"name":"Git","_id":"circaqzec0001qksfbomsq9v9"},{"name":"Version Control","_id":"circaqzei0002qksfvw7y9bv6"}]}}